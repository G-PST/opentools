name: Handle file uploaded in issue 

on: 
  issues:
    types: [opened, edited]

jobs:
  process_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - run: |
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue URL: ${{ github.event.issue.url }}"
      
      - name: Access Issue files
        uses: g-pst/opentools-issueprocessor@develop
        id: issue_branch
        with:
          issue_number: "${{ github.event.issue.number }}"
          issue_title: "${{ github.event.issue.title }}"
          issue_url: "${{ github.event.issue.url }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          datapath: data

      - name: Provides error message
        if: steps.issue_branch.outputs.errormessage
        run: |
          gh issue comment $ISSUE_NUMBER --body ${{steps.issue_branch.outputs.errormessage}}
          gh issue edit $ISSUE_NUMBER --add-label "data error"
          exit 1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}

      - name: Validate data and test generating the site
        id: test
        uses: g-pst/opentools-builder@v3
        with:
          outputpath: ${{ env.GITHUB_OUTPUT }}

      - name: Provides error message back to the issue
        if: ${{ steps.test.outputs.status != 'pass' }}
        run: |
          gh issue comment $ISSUE_NUMBER --body-file errormessage.md
          exit 1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}

      - name: Provides success message back to the issue
        if: ${{ steps.test.outputs.status == 'pass' }}
        run: |
          gh issue comment $ISSUE_NUMBER --body "Your data is successfully tested."
          gh issue edit $ISSUE_NUMBER --add-label "data success" --remove-label "data error"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        id: pull_request
        if: ${{ steps.issue_branch.outputs.branch && steps.test.outputs.status == 'pass'}}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.issue_branch.outputs.branch }}
          title: 'Automated Pull Request'
          base: main
          body: 'This pull request was automatically created.'

      - name: Link pull request back to the issue
        if: ${{  steps.test.outputs.status == 'pass' && steps.pull_request.outputs.pull-request-number }}
        run: gh issue comment $ISSUE_NUMBER --body "Please make update and/or track this PR. Fixes \#$PR"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          PR: ${{ steps.pull_request.outputs.pull-request-number }} 

      
